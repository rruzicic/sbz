import com.sbz.bookstore.model.Book;
import com.sbz.bookstore.model.RatingLevel;
import com.sbz.bookstore.model.Genre;
import com.sbz.bookstore.model.User;
import com.sbz.bookstore.model.facts.RegularUserRecommendedBooks;
import com.sbz.bookstore.model.facts.UserStatus;
import java.time.LocalDate;

rule "User is new if he has less than 10 reviews"
    agenda-group "user-new"
    when
        $user: User(reviews.size() < 10)
        $userStatus: UserStatus()
    then
        $userStatus.setIsUserNew(true);
end

rule "User is NOT new if he has more or equal to 10 reviews"
    agenda-group "user-new"
    when
        $user: User(reviews.size() >= 10)
        $userStatus: UserStatus()
    then
        $userStatus.setIsUserNew(false);
end

rule "User did NOT choose his favourite genres"
    agenda-group "user-choose-genres"
    when
        $user: User(favouriteGenres.isEmpty())
        $userStatus: UserStatus()
    then
        $userStatus.setHasChosenFavouriteGenres(false);
end

rule "User did choose his favourite genres"
    agenda-group "user-choose-genres"
    when
        $user: User(!favouriteGenres.isEmpty())
        $userStatus: UserStatus()
    then
        $userStatus.setHasChosenFavouriteGenres(true);
end

rule "recommend 10 best books if user chose his favourite genres"
    agenda-group "recommend-books"
    when
        $userStatus: UserStatus(isUserNew == true, hasChosenFavouriteGenres == true)
        $recommendation: RegularUserRecommendedBooks()
    then
        $recommendation.setRecommendedBooks($userStatus.getTenMostPopularBooksByFourAuthors());
end


rule "Book liked by similar user"
    agenda-group "recommend-books"
    lock-on-active
    when
        $userStatus: UserStatus(isUserNew == false)
        $book: Book($userStatus.getBooksLikedBySimilarUsers.contains($book))
        $recommendationList: RegularUserRecommendedBooks()
    then
        modify($recommendationList){addToRecommended($book);}
end
rule "Book similar to books user likes"
    agenda-group "recommend-books"
    lock-on-active
    when
        $userStatus: UserStatus()
        $book: Book($userStatus.getBooksSimilarToBooksUserLikes.contains($book))
        $recommendationList: RegularUserRecommendedBooks()
    then
         modify($recommendationList){addToRecommended($book);}
end


